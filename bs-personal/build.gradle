apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.Sabadell'
version='0.0.2'

android {
  compileSdkVersion 25
  buildToolsVersion "25.0.0"

  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 25
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  compile 'com.android.support:support-annotations:25.1.0'
  compile 'com.squareup.retrofit2:retrofit:2.1.0'

  compile 'com.squareup.retrofit2:converter-gson:2.1.0'
  compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-core:2.2.22'
  testCompile 'org.robolectric:robolectric:3.1'
}

// build a jar with source files
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  failOnError  false
  source = android.sourceSets.main.java.sourceFiles
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}